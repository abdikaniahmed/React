[{"/home/runner/React/src/index.js":"1","/home/runner/React/src/App.js":"2","/home/runner/React/src/reportWebVitals.js":"3","/home/runner/React/src/components/mainComponent.js":"4","/home/runner/React/src/redux/configureStore.js":"5","/home/runner/React/src/components/HomeComponent.js":"6","/home/runner/React/src/components/MenuComponent.js":"7","/home/runner/React/src/components/DishdetailComponent.js":"8","/home/runner/React/src/components/HeaderComponent.js":"9","/home/runner/React/src/components/FooterComponent.js":"10","/home/runner/React/src/components/ContactComponent.js":"11","/home/runner/React/src/components/AboutComponent.js":"12","/home/runner/React/src/redux/dishes.js":"13","/home/runner/React/src/redux/comments.js":"14","/home/runner/React/src/redux/promotions.js":"15","/home/runner/React/src/redux/leaders.js":"16","/home/runner/React/src/redux/ActionCreators.js":"17","/home/runner/React/src/redux/ActionTypes.js":"18","/home/runner/React/src/shared/dishes.js":"19","/home/runner/React/src/shared/comments.js":"20","/home/runner/React/src/shared/promotions.js":"21","/home/runner/React/src/shared/leaders.js":"22"},{"size":639,"mtime":1639758494613,"results":"23","hashOfConfig":"24"},{"size":532,"mtime":1639758494613,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1639758494617,"results":"26","hashOfConfig":"24"},{"size":2295,"mtime":1639930922414,"results":"27","hashOfConfig":"24"},{"size":433,"mtime":1639843817429,"results":"28","hashOfConfig":"24"},{"size":1144,"mtime":1639758494613,"results":"29","hashOfConfig":"24"},{"size":1345,"mtime":1639758494613,"results":"30","hashOfConfig":"24"},{"size":5674,"mtime":1639932665883,"results":"31","hashOfConfig":"24"},{"size":4693,"mtime":1639758494613,"results":"32","hashOfConfig":"24"},{"size":2615,"mtime":1639758494613,"results":"33","hashOfConfig":"24"},{"size":6545,"mtime":1639758494613,"results":"34","hashOfConfig":"24"},{"size":4255,"mtime":1639758494613,"results":"35","hashOfConfig":"24"},{"size":160,"mtime":1639843816733,"results":"36","hashOfConfig":"24"},{"size":442,"mtime":1639930641673,"results":"37","hashOfConfig":"24"},{"size":190,"mtime":1639843768248,"results":"38","hashOfConfig":"24"},{"size":178,"mtime":1639843261347,"results":"39","hashOfConfig":"24"},{"size":269,"mtime":1639930554206,"results":"40","hashOfConfig":"24"},{"size":41,"mtime":1639930497978,"results":"41","hashOfConfig":"24"},{"size":1453,"mtime":1639758494617,"results":"42","hashOfConfig":"24"},{"size":4117,"mtime":1639758494617,"results":"43","hashOfConfig":"24"},{"size":435,"mtime":1639758494617,"results":"44","hashOfConfig":"24"},{"size":2345,"mtime":1639758494617,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"5cmyko",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"/home/runner/React/src/index.js",[],["95","96"],"/home/runner/React/src/App.js",[],"/home/runner/React/src/reportWebVitals.js",[],"/home/runner/React/src/components/mainComponent.js",["97"],"import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport  Menu  from \"./MenuComponent\";\nimport DishDetail from './DishdetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport { addComment } from '../redux/ActionCreators';\n\nconst mapStateToProps = state => {\n    return {\n      dishes: state.dishes,\n      comments: state.comments,\n      promotions: state.promotions,\n      leaders: state.leaders\n    }\n}\nconst mapDispatchToProps = dispatch => ({\n  \n    addComment: (dishId, rating, author, comment) => dispatch(addComment(dishId, rating, author, comment))\n  \n  });\nclass Main extends Component {\n  constructor(props){\n    super(props);\n   \n    }\n   \n\n  render() {\n    const HomePage = () => {\n      return (\n        <Home dish={this.props.dishes.filter((dish) => dish.featured)[0]}\n              promotion={this.props.promotions.filter((prom) => prom.featured)[0]}\n              leader={this.props.leaders.filter((lead) => lead.featured)[0]}\n        />\n      );\n    }\n\n    const AboutUs = () => {\n      return (\n        <About leaders={this.props.leaders} />\n      )\n    }\n\n    const DishWithId = ({match}) => {\n      return(\n          <DishDetail dish={this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \n            comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} \n        addComment={this.props.addComment}\n      />\n      );\n    };\n    \n    return (\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route path=\"/Home\" component={HomePage} />\n          <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\n          <Route path='/menu/:dishId' component={DishWithId} />\n          <Route  exact path=\"/contactus\" component={ Contact }  />\n          <Route exact path=\"/Aboutus\" component={AboutUs} />\n          <Redirect to=\"/home\" />\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n  \n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","/home/runner/React/src/redux/configureStore.js",[],"/home/runner/React/src/components/HomeComponent.js",[],"/home/runner/React/src/components/MenuComponent.js",[],"/home/runner/React/src/components/DishdetailComponent.js",["98","99","100","101"],"import React, { useState, Component  } from \"react\";\nimport { Card, CardBody, CardText, CardTitle, CardImg, Breadcrumb, BreadcrumbItem, Button, Label, Modal, ModalBody,ModalHeader } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\n//import { Modal } from \"bootstrap\";\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\n\nfunction RenderDish({ dish }) {\n  return (\n    <Card>\n      <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\n      <CardBody>\n        <CardTitle>{dish.name}</CardTitle>\n        <CardText>{dish.description}</CardText>\n      </CardBody>\n    </Card>\n  );\n}\n\nfunction RenderComments({comments, addComment, dishId}) {\n  if (comments != null) {\n    return (\n      <div>\n        <h4>comments</h4>\n        <ul className=\"list-unstyled\">\n          {comments.map((comment) => {\n            return (\n              <li key={comment.id}>\n                <p>{comment.comment} <br />\n                  --{comment.author} ,\n                  {new Intl.DateTimeFormat(\"en-US\", {\n                    year: \"numeric\",\n                    month: \"short\",\n                    day: \"2-digit\"\n                  }).format(new Date(Date.parse(comment.date)))}\n                </p>\n              </li>\n            );\n          })}\n        </ul>\n\n      <CommentForm dishId={dishId} addComment={addComment} />\n\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n}\nconst DishDetail = (props) => {\n  if (props.dish != null)\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/Home\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/menu\">Menu</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n          </Breadcrumb>\n          <div className=\"col-12\">\n            <h3>{props.dish.name}</h3>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md\">\n            <RenderDish dish={props.dish} />\n          </div>\n          <div className=\"col-md\">\n            <RenderComments comments={props.comments} addComment={props.addComment} dishId={props.dish.id}/>\n          </div>\n        </div>\n      </div>\n    );\n  else {\n    return <div></div>;\n  }\n};\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmitComment = this.handleSubmitComment.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n  handleSubmitComment(values) {\n    this.toggleModal();\n    this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\n  }\n  handleBlur = (field) => (evt) => {\n    this.setState({\n      touched: { ...this.state.touched, [field]: true }\n    });\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"ml-auto\">\n          <Button outline onClick={this.toggleModal}>\n            <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\n          </Button>\n        </div>\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n              <ModalHeader toggle={this.toggleModal}>Submit Comment </ModalHeader>\n              <ModalBody>\n                <LocalForm onSubmit={(values) => this.handleSubmitComment(values)}>\n                  <Label htmlFor=\"rating\">Rating</Label>\n                  <Control.select\n                    model=\".rating\"\n                    name=\"rating\"\n                    className=\"form-control\"\n                  >\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                  </Control.select>\n                  <Label htmlFor=\"author\" className=\"mt-2\">\n                    lastname\n                  </Label>\n                  <Control.text\n                    model=\".author\"\n                    id=\"author\"\n                    name=\"author\"\n                    placeholder=\"Your Name\"\n                    className=\"form-control mb-2\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15)\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".yname\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required \",\n                      minLength: \"Must be greater than 2 characters\",\n                      maxLength: \"Must be 15 characters or less\"\n                    }}\n                  />\n                  <Label htmlFor=\"comment\">Your feedback</Label>\n                  <Control.textarea\n                    model=\".comment\"\n                    rows=\"6\"\n                    name=\"comment\"\n                    id=\"comment\"\n                    className=\"form-control\"\n                    placeholder=\"Write your Comment\"\n                  ></Control.textarea>\n\n                  <Button type=\"submit\" color=\"primary\" className=\"mt-2\">\n                    Submit\n                  </Button>\n                </LocalForm>\n              </ModalBody>\n            </Modal>\n      </div>\n    );\n  }\n}\n\nexport default DishDetail;","/home/runner/React/src/components/HeaderComponent.js",[],"/home/runner/React/src/components/FooterComponent.js",[],"/home/runner/React/src/components/ContactComponent.js",["102","103","104","105","106","107","108","109","110","111","112","113"],"import React, { Component } from \"react\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Col,\n  Button,\n  Label,\n  Row\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(values) {\n    console.log(\"Current state is \" + JSON.stringify(values));\n    alert(\"Current state is \" + JSON.stringify(values));\n    ///event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/Home\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"col\">\n          <h3>Contact Us</h3>\n          <hr />\n        </div>\n        <div className=\"row row-content\">\n          <div className=\"col-12\">\n            <h3>Location Information</h3>\n          </div>\n          <div className=\"col-12 col-sm-4 offset-sm-1\">\n            <h5>Our Address</h5>\n            <address>\n              121, Clear Water Bay Road\n              <br />\n              Clear Water Bay, Kowloon\n              <br />\n              HONG KONG\n              <br />\n              <i className=\"fa fa-phone\"></i>: +852 1234 5678\n              <br />\n              <i className=\"fa fa-fax\"></i>: +852 8765 4321\n              <br />\n              <i className=\"fa fa-envelope\"></i>:{\" \"}\n              <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n            </address>\n          </div>\n          <div className=\"col-12 col-sm-6 offset-sm-1\">\n            <h5>Map of our Location</h5>\n          </div>\n          <div className=\"col-12 col-sm-11 offset-sm-1\">\n            <div className=\"btn-group\" role=\"group\">\n              <a\n                role=\"button\"\n                className=\"btn btn-primary\"\n                href=\"tel:+85212345678\"\n              >\n                <i className=\"fa fa-phone\"></i> Call\n              </a>\n              <a role=\"button\" className=\"btn btn-info\">\n                <i className=\"fa fa-skype\"></i> Skype\n              </a>\n              <a\n                role=\"button\"\n                className=\"btn btn-success\"\n                href=\"mailto:confusion@food.net\"\n              >\n                <i className=\"fa fa-envelope-o\"></i> Email\n              </a>\n            </div>\n          </div>\n        </div>\n        <div className=\"row row-content\">\n          <div className=\"col-12\">\n            <h3>Send us Your feedback</h3>\n          </div>\n          <div className=\"col-md-9\">\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"firstname\" md={2}>\n                  Firstname\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".firstname\"\n                    model=\".firstname\"\n                    id=\"firstname\"\n                    name=\"firstname\"\n                    placeholder=\"First Name\"\n                    className=\"form-control\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"lastname\" md={2}>\n                  lastname\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".lastname\"\n                    model=\".lastname\"\n                    id=\"lastname\"\n                    name=\"lastname\"\n                    placeholder=\"last Name\"\n                    className=\"form-control\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"telnum\" md={2}>\n                  Tel. Num\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".telnum\"\n                    model=\".telnum\"\n                    id=\"telnum\"\n                    name=\"telnum\"\n                    placeholder=\"Telephone\"\n                    className=\"form-control\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"email\" md={2}>\n                  Email\n                </Label>\n                <Col md={10}>\n                  <Control.text\n                    model=\".email\"\n                    id=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    className=\"form-control\"\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col md={{ size: 6, offset: 2 }}>\n                  <div className=\"form-check\">\n                    <Label check>\n                      <Control.checkbox\n                        model=\".agree\"\n                        name=\"agree\"\n                        className=\"form-check-input\"\n                      />{\" \"}\n                      <strong>May we contact you?</strong>\n                    </Label>\n                  </div>\n                </Col>\n                <Col md={{ size: 3, offset: 1 }}>\n                  <Control.select\n                    model=\".contactType\"\n                    name=\"contactType\"\n                    className=\"form-control\"\n                  >\n                    <option>Tel.</option>\n                    <option>Email</option>\n                  </Control.select>\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label md={2} htmlFor=\"txtArea\">\n                  Your feedback\n                </Label>\n                <Col md={10}>\n                  <Control.textarea\n                    model=\".message\"\n                    rows=\"12\"\n                    name=\"message\"\n                    id=\"txtArea\"\n                    className=\"form-control\"\n                    placeholder=\"Write your message\"\n                  ></Control.textarea>\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Col md={{ size: 10, offset: 2 }}>\n                  <Button type=\"submit\" color=\"primary\" className=\"btn-lg\">\n                    Send feedback\n                  </Button>\n                </Col>\n              </Row>\n            </LocalForm>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","/home/runner/React/src/components/AboutComponent.js",[],"/home/runner/React/src/redux/dishes.js",[],"/home/runner/React/src/redux/comments.js",[],"/home/runner/React/src/redux/promotions.js",[],"/home/runner/React/src/redux/leaders.js",[],"/home/runner/React/src/redux/ActionCreators.js",[],"/home/runner/React/src/redux/ActionTypes.js",[],"/home/runner/React/src/shared/dishes.js",[],"/home/runner/React/src/shared/comments.js",[],"/home/runner/React/src/shared/promotions.js",[],"/home/runner/React/src/shared/leaders.js",[],["114","115"],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":27,"column":3,"nodeType":"122","messageId":"123","endLine":30,"endColumn":6},{"ruleId":"124","severity":1,"message":"125","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":123,"column":19,"nodeType":"130","endLine":127,"endColumn":20},{"ruleId":"128","severity":1,"message":"131","line":137,"column":19,"nodeType":"130","endLine":148,"endColumn":21},{"ruleId":"128","severity":1,"message":"132","line":160,"column":19,"nodeType":"130","endLine":167,"endColumn":20},{"ruleId":"124","severity":1,"message":"133","line":11,"column":30,"nodeType":"126","messageId":"127","endLine":11,"endColumn":36},{"ruleId":"134","severity":1,"message":"135","line":72,"column":15,"nodeType":"130","endLine":72,"endColumn":57},{"ruleId":"128","severity":1,"message":"131","line":96,"column":19,"nodeType":"130","endLine":103,"endColumn":21},{"ruleId":"136","severity":1,"message":"137","line":98,"column":21,"nodeType":"138","endLine":98,"endColumn":39},{"ruleId":"128","severity":1,"message":"131","line":111,"column":19,"nodeType":"130","endLine":118,"endColumn":21},{"ruleId":"136","severity":1,"message":"137","line":113,"column":21,"nodeType":"138","endLine":113,"endColumn":38},{"ruleId":"128","severity":1,"message":"131","line":126,"column":19,"nodeType":"130","endLine":133,"endColumn":21},{"ruleId":"136","severity":1,"message":"137","line":128,"column":21,"nodeType":"138","endLine":128,"endColumn":36},{"ruleId":"128","severity":1,"message":"131","line":141,"column":19,"nodeType":"130","endLine":147,"endColumn":21},{"ruleId":"128","severity":1,"message":"139","line":154,"column":23,"nodeType":"130","endLine":158,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":164,"column":19,"nodeType":"130","endLine":168,"endColumn":20},{"ruleId":"128","severity":1,"message":"132","line":179,"column":19,"nodeType":"130","endLine":186,"endColumn":20},{"ruleId":"116","replacedBy":"140"},{"ruleId":"118","replacedBy":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'Errors' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["142"],["143"],"no-global-assign","no-unsafe-negation"]